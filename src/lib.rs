pub mod messages;
pub mod records;
pub mod utils;
pub mod zone;
pub mod journal;

#[cfg(test)]
mod tests {
    use std::collections::HashMap;
    use crate::journal::journal_reader::JournalReader;
    use crate::messages::inter::rr_types::RRTypes;
    use crate::messages::message_base::MessageBase;
    use crate::records::inter::record_base::RecordBase;
    use crate::zone::zone_reader::ZoneReader;

    type RecordMap = HashMap<String, HashMap<RRTypes, Vec<Box<dyn RecordBase>>>>;

    #[test]
    fn encode_and_decode() {
        //let x = vec![ 0xa7, 0xa2, 0x81, 0x80, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x06, 0x67, 0x6f, 0x6f,
        //              0x67, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x01,
        //              0x00, 0x01, 0x00, 0x00, 0x01, 0x23, 0x00, 0x04, 0x8e, 0xfa, 0x45, 0xee, 0x00, 0x00, 0x29, 0x04,
        //              0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];

        ////URI
        //let x = vec![ 0x8e, 0x39, 0x85, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x5, 0x66, 0x69, 0x6e, 0x64, 0x39, 0x3, 0x6e, 0x65, 0x74, 0x0, 0x1, 0x0, 0x0, 0x1, 0xc0, 0xc, 0x1, 0x0, 0x0, 0x1, 0x0, 0x0, 0x1, 0x2c, 0x0, 0x16, 0x0, 0x1, 0x0, 0x1, 0x66, 0x69, 0x6e, 0x64, 0x39, 0x3a, 0x2f, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x0, 0x0, 0x29, 0x4, 0xd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 ];

        ////LOC
        //let x = vec![ 0xb6, 0x23, 0x85, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x5, 0x66, 0x69, 0x6e, 0x64, 0x39, 0x3, 0x6e, 0x65, 0x74, 0x0, 0x0, 0x1d, 0x0, 0x1, 0xc0, 0xc, 0x0, 0x1d, 0x0, 0x1, 0x0, 0x0, 0x1, 0x2c, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x6e, 0x67, 0x2d, 0xa0, 0x9c, 0xf7, 0xc5, 0x80, 0x0, 0x98, 0x96, 0x80, 0x0, 0x0, 0x29, 0x4, 0xd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 ];

        ////ANY
        //let x = vec![ 0x9c, 0x84, 0x85, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x5, 0x66, 0x69, 0x6e, 0x64, 0x39, 0x3, 0x6e, 0x65, 0x74, 0x0, 0x0, 0xff, 0x0, 0x1, 0xc0, 0xc, 0x0, 0xd, 0x0, 0x1, 0x0, 0x0, 0xe, 0x10, 0x0, 0x9, 0x7, 0x52, 0x46, 0x43, 0x38, 0x34, 0x38, 0x32, 0x0, 0x0, 0x0, 0x29, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x32, 0x0, 0xf, 0x0, 0x2e, 0x0, 0x15, 0x54, 0x79, 0x70, 0x65, 0x20, 0x41, 0x4e, 0x59, 0x20, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x20, 0x68, 0x65, 0x72, 0x65, 0x2c, 0x20, 0x52, 0x46, 0x43, 0x38, 0x34, 0x38, 0x32 ];

        ////SSHFP
        //let x = vec![ 0x45, 0xe, 0x85, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0x5, 0x66, 0x69, 0x6e, 0x64, 0x39, 0x3, 0x6e, 0x65, 0x74, 0x0, 0x0, 0x2c, 0x0, 0x1, 0xc0, 0xc, 0x0, 0x2c, 0x0, 0x1, 0x0, 0x0, 0x1, 0x2c, 0x0, 0x16, 0x1, 0x2, 0x8b, 0x9f, 0x2f, 0x2b, 0x6b, 0x3b, 0x6, 0xe3, 0xd8, 0x9f, 0x54, 0xd0, 0x73, 0xd, 0xce, 0x5b, 0x4, 0x26, 0xf8, 0x8c, 0x0, 0x0, 0x29, 0x4, 0xd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 ];

        //HTTPS
        //let x = vec![ 0x2a, 0x2e, 0x85, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x5, 0x66, 0x69, 0x6e, 0x64, 0x39, 0x3, 0x6e, 0x65, 0x74, 0x0, 0x0, 0x41, 0x0, 0x1, 0xc0, 0xc, 0x0, 0x41, 0x0, 0x1, 0x0, 0x0, 0x1, 0x2c, 0x0, 0x39, 0x0, 0x1, 0x1, 0x61, 0x1, 0x62, 0x1, 0x63, 0x5, 0x66, 0x69, 0x6e, 0x64, 0x39, 0x3, 0x6e, 0x65, 0x74, 0x0, 0x0, 0x1, 0x0, 0x6, 0x2, 0x68, 0x33, 0x2, 0x68, 0x32, 0x0, 0x4, 0x0, 0x4, 0x7f, 0x0, 0x0, 0x1, 0x0, 0x6, 0x0, 0x10, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1 ];//, 0x0, 0x0, 0x29, 0x4, 0xd0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0 ];

        //TKEY & TSIG
        let x = vec![ 0x2, 0x34, 0x80, 0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x1, 0xa, 0x33, 0x32, 0x35, 0x39, 0x33, 0x36, 0x35, 0x39, 0x35, 0x34, 0x13, 0x73, 0x69, 0x67, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x73, 0x74, 0x37, 0x62, 0x6f, 0x30, 0x30, 0x33, 0x73, 0x70, 0x6f, 0x8, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x73, 0x74, 0x3, 0x6c, 0x61, 0x6e, 0x0, 0x0, 0xf9, 0x0, 0xff, 0xa, 0x33, 0x32, 0x35, 0x39, 0x33, 0x36, 0x35, 0x39, 0x35, 0x34, 0x13, 0x73, 0x69, 0x67, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x73, 0x74, 0x37, 0x62, 0x6f, 0x30, 0x30, 0x33, 0x73, 0x70, 0x6f, 0x8, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x73, 0x74, 0x3, 0x6c, 0x61, 0x6e, 0x0, 0x0, 0xf9, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0xd4, 0x8, 0x67, 0x73, 0x73, 0x2d, 0x74, 0x73, 0x69, 0x67, 0x0, 0x50, 0xf8, 0xcf, 0xbb, 0x50, 0xfa, 0x21, 0x3b, 0x0, 0x3, 0x0, 0x0, 0x0, 0xba, 0xa1, 0x81, 0xb7, 0x30, 0x81, 0xb4, 0xa0, 0x3, 0xa, 0x1, 0x0, 0xa1, 0xb, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x12, 0x1, 0x2, 0x2, 0xa2, 0x81, 0x9f, 0x4, 0x81, 0x9c, 0x60, 0x81, 0x99, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x12, 0x1, 0x2, 0x2, 0x2, 0x0, 0x6f, 0x81, 0x89, 0x30, 0x81, 0x86, 0xa0, 0x3, 0x2, 0x1, 0x5, 0xa1, 0x3, 0x2, 0x1, 0xf, 0xa2, 0x7a, 0x30, 0x78, 0xa0, 0x3, 0x2, 0x1, 0x12, 0xa2, 0x71, 0x4, 0x6f, 0x32, 0x94, 0x40, 0xf8, 0xae, 0xaa, 0xbd, 0xa2, 0x9e, 0x7e, 0x78, 0x1d, 0xf, 0xf0, 0x9b, 0xae, 0x14, 0x5c, 0x99, 0xc1, 0xdc, 0xb6, 0xc7, 0xa0, 0xbd, 0x7a, 0x83, 0xed, 0x18, 0xb, 0xf9, 0xea, 0xa0, 0x29, 0x1f, 0xe, 0x82, 0xd8, 0x2f, 0x1d, 0x59, 0xb9, 0xda, 0x97, 0x41, 0xf2, 0x7b, 0xab, 0xa2, 0xdb, 0x38, 0xe9, 0xcd, 0xfe, 0x27, 0xb3, 0xbf, 0x13, 0xa, 0xeb, 0xde, 0xa7, 0x7e, 0x55, 0x1a, 0x6c, 0xff, 0x2d, 0x64, 0xfb, 0xfc, 0x56, 0x52, 0xb5, 0xc8, 0x28, 0x7, 0x17, 0x6c, 0xe7, 0x57, 0xe5, 0xf5, 0xaa, 0xd5, 0x84, 0x18, 0x80, 0x21, 0xa1, 0xd9, 0xdd, 0x3, 0x82, 0xf1, 0xcf, 0x1b, 0xe6, 0x17, 0x97, 0xee, 0x2b, 0xdd, 0x27, 0x80, 0xea, 0x42, 0xde, 0xc8, 0x57, 0x8a, 0x0, 0x0, 0xa, 0x33, 0x32, 0x35, 0x39, 0x33, 0x36, 0x35, 0x39, 0x35, 0x34, 0x13, 0x73, 0x69, 0x67, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x73, 0x74, 0x37, 0x62, 0x6f, 0x30, 0x30, 0x33, 0x73, 0x70, 0x6f, 0x8, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x73, 0x74, 0x3, 0x6c, 0x61, 0x6e, 0x0, 0x0, 0xfa, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x0, 0x36, 0x8, 0x67, 0x73, 0x73, 0x2d, 0x74, 0x73, 0x69, 0x67, 0x0, 0x0, 0x0, 0x50, 0xf8, 0xcf, 0xbb, 0x8c, 0xa0, 0x0, 0x1c, 0x4, 0x4, 0x5, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0x0, 0x0, 0x0, 0x73, 0x28, 0x5d, 0xa, 0x2d, 0xf4, 0xa3, 0x34, 0x2f, 0xcf, 0x1, 0x6f, 0x3c, 0x9f, 0x76, 0x82, 0x2, 0x34, 0x0, 0x0, 0x0, 0x0 ];

        //TKEY
        //let x = vec![ 0x2, 0x34, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0xa, 0x33, 0x32, 0x35, 0x39, 0x33, 0x36, 0x35, 0x39, 0x35, 0x34, 0x13, 0x73, 0x69, 0x67, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x73, 0x74, 0x37, 0x62, 0x6f, 0x30, 0x30, 0x33, 0x73, 0x70, 0x6f, 0x8, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x73, 0x74, 0x3, 0x6c, 0x61, 0x6e, 0x0, 0x0, 0xf9, 0x0, 0xff, 0xa, 0x33, 0x32, 0x35, 0x39, 0x33, 0x36, 0x35, 0x39, 0x35, 0x34, 0x13, 0x73, 0x69, 0x67, 0x2d, 0x77, 0x69, 0x6e, 0x2d, 0x73, 0x74, 0x37, 0x62, 0x6f, 0x30, 0x30, 0x33, 0x73, 0x70, 0x6f, 0x8, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x73, 0x74, 0x3, 0x6c, 0x61, 0x6e, 0x0, 0x0, 0xf9, 0x0, 0xff, 0x0, 0x0, 0x0, 0x0, 0x5, 0xdc, 0x8, 0x67, 0x73, 0x73, 0x2d, 0x74, 0x73, 0x69, 0x67, 0x0, 0x50, 0xf8, 0xcf, 0xbd, 0x50, 0xf8, 0xcf, 0xbd, 0x0, 0x3, 0x0, 0x0, 0x5, 0xc2, 0x60, 0x82, 0x5, 0xbe, 0x6, 0x6, 0x2b, 0x6, 0x1, 0x5, 0x5, 0x2, 0xa0, 0x82, 0x5, 0xb2, 0x30, 0x82, 0x5, 0xae, 0xa0, 0xd, 0x30, 0xb, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x12, 0x1, 0x2, 0x2, 0xa2, 0x82, 0x5, 0x9b, 0x4, 0x82, 0x5, 0x97, 0x60, 0x82, 0x5, 0x93, 0x6, 0x9, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x12, 0x1, 0x2, 0x2, 0x1, 0x0, 0x6e, 0x82, 0x5, 0x82, 0x30, 0x82, 0x5, 0x7e, 0xa0, 0x3, 0x2, 0x1, 0x5, 0xa1, 0x3, 0x2, 0x1, 0xe, 0xa2, 0x7, 0x3, 0x5, 0x0, 0x20, 0x0, 0x0, 0x0, 0xa3, 0x82, 0x4, 0x8d, 0x61, 0x82, 0x4, 0x89, 0x30, 0x82, 0x4, 0x85, 0xa0, 0x3, 0x2, 0x1, 0x5, 0xa1, 0xe, 0x1b, 0xc, 0x48, 0x4f, 0x4d, 0x45, 0x54, 0x45, 0x53, 0x54, 0x2e, 0x4c, 0x41, 0x4e, 0xa2, 0x2e, 0x30, 0x2c, 0xa0, 0x3, 0x2, 0x1, 0x1, 0xa1, 0x25, 0x30, 0x23, 0x1b, 0x3, 0x44, 0x4e, 0x53, 0x1b, 0x1c, 0x77, 0x69, 0x6e, 0x2d, 0x73, 0x74, 0x37, 0x62, 0x6f, 0x30, 0x30, 0x33, 0x73, 0x70, 0x6f, 0x2e, 0x68, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x6c, 0x61, 0x6e, 0xa3, 0x82, 0x4, 0x3c, 0x30, 0x82, 0x4, 0x38, 0xa0, 0x3, 0x2, 0x1, 0x12, 0xa1, 0x3, 0x2, 0x1, 0x3, 0xa2, 0x82, 0x4, 0x2a, 0x4, 0x82, 0x4, 0x26, 0xa5, 0x16, 0xd6, 0x8e, 0x23, 0x22, 0xba, 0xb4, 0xba, 0x1e, 0x7a, 0x1f, 0x20, 0x43, 0x8b, 0xaf, 0xc9, 0x58, 0x6f, 0xfd, 0xac, 0x5e, 0xea, 0x4b, 0x86, 0xe1, 0x8e, 0x8e, 0x90, 0x2b, 0x62, 0x66, 0x73, 0x53, 0xbb, 0xb9, 0xf3, 0x56, 0xce, 0xcc, 0x58, 0x57, 0x9c, 0x40, 0xfa, 0x30, 0x3b, 0x46, 0x2e, 0x86, 0x6c, 0x82, 0xc0, 0x66, 0x66, 0xc7, 0x62, 0x83, 0xf8, 0x93, 0xe5, 0x9a, 0xf6, 0x70, 0xb, 0x22, 0x22, 0xb4, 0x45, 0xd0, 0x7a, 0xbf, 0x7a, 0x34, 0x72, 0x74, 0x2b, 0xf6, 0x77, 0xde, 0xcd, 0xba, 0x38, 0xaf, 0x1c, 0x90, 0x50, 0x4, 0xb9, 0xc5, 0x2, 0xe8, 0xa3, 0xe0, 0x88, 0x19, 0xb5, 0xac, 0x19, 0x96, 0xb7, 0xdb, 0x30, 0x48, 0x72, 0x1b, 0xa4, 0xbc, 0xd4, 0xee, 0x9b, 0x99, 0x39, 0xc1, 0x99, 0x83, 0xc4, 0xcb, 0x8d, 0xdb, 0x54, 0x25, 0x51, 0x9c, 0x96, 0xf8, 0x18, 0xc3, 0x17, 0xee, 0x25, 0xc0, 0x9c, 0x3b, 0x2d, 0xb, 0x1c, 0xfe, 0x3d, 0x5e, 0x30, 0x36, 0x91, 0x7, 0xf0, 0x10, 0xee, 0xe9, 0x8b, 0xf0, 0x5c, 0x13, 0x10, 0x55, 0xfe, 0x4d, 0xb1, 0xa6, 0xb3, 0xf1, 0x61, 0x5f, 0xac, 0xd5, 0xe0, 0xab, 0xd1, 0xec, 0xa8, 0xc5, 0xea, 0x1a, 0xfc, 0xe2, 0x6, 0x66, 0xb9, 0x7c, 0xb1, 0x13, 0x32, 0xf2, 0x28, 0xf7, 0x89, 0x95, 0x5c, 0x3c, 0xbc, 0x60, 0x76, 0x7d, 0xe0, 0xf0, 0x1a, 0xdc, 0x8c, 0x4b, 0x16, 0x8d, 0x37, 0xd8, 0x35, 0xb3, 0x59, 0x4e, 0xe9, 0x93, 0x8c, 0x1c, 0x2a, 0xd8, 0xd3, 0x70, 0x2, 0xe8, 0xa2, 0xa0, 0x76, 0x49, 0x42, 0xd4, 0x50, 0x83, 0xa0, 0x1d, 0x73, 0x7d, 0xd5, 0xf, 0xc6, 0x8d, 0xf0, 0xe1, 0xa1, 0xc, 0x19, 0x4f, 0xd4, 0x5f, 0xa4, 0x17, 0x63, 0x78, 0x59, 0x4f, 0x6e, 0xf7, 0x1d, 0x7, 0x37, 0x7a, 0xab, 0xfb, 0x46, 0x8e, 0x6c, 0xdb, 0xfb, 0x3, 0x6b, 0x89, 0x33, 0x65, 0x7e, 0x91, 0x60, 0x2, 0x8e, 0xb5, 0xe5, 0x5f, 0xa8, 0x42, 0x1c, 0x4f, 0xab, 0x2, 0x16, 0xd2, 0x30, 0xbc, 0x11, 0x3f, 0x88, 0x6f, 0x9, 0x53, 0xec, 0xaf, 0x20, 0x93, 0x23, 0xc3, 0x41, 0xad, 0xc0, 0xaf, 0x3c, 0x45, 0x7e, 0x1, 0x55, 0x10, 0xa9, 0x2e, 0x3a, 0x1b, 0x8e, 0x55, 0x84, 0xfc, 0x45, 0x23, 0xb5, 0xa5, 0x11, 0x8c, 0xf5, 0x69, 0x97, 0x87, 0x4b, 0x35, 0xa5, 0xa6, 0x77, 0x78, 0xa7, 0xea, 0x2a, 0xf3, 0x5f, 0xca, 0xd4, 0xf1, 0xde, 0xcd, 0x7, 0x6e, 0x6d, 0x77, 0x37, 0x87, 0x6a, 0x1b, 0x72, 0xe4, 0x76, 0x65, 0x38, 0x5, 0x8, 0xb8, 0x36, 0x35, 0x7b, 0xcd, 0x20, 0xf6, 0x16, 0x33, 0x84, 0xc9, 0x9c, 0x47, 0xce, 0xdf, 0xb, 0xa2, 0x23, 0xee, 0xdc, 0xd6, 0xde, 0x73, 0x96, 0x44, 0x27, 0x7a, 0xaa, 0x82, 0xc6, 0x55, 0x8b, 0x44, 0x70, 0x84, 0xd3, 0xfe, 0x1c, 0x71, 0xb1, 0x57, 0x9f, 0xe, 0x9d, 0xfe, 0x58, 0xb9, 0x83, 0x4c, 0x9c, 0x35, 0x9d, 0xc9, 0x13, 0xcf, 0xf7, 0x16, 0x2f, 0x56, 0x8d, 0x23, 0xac, 0x78, 0xc2, 0xb5, 0xfd, 0x39, 0xd4, 0x27, 0x27, 0x62, 0x8a, 0x86, 0xb1, 0x0, 0x2d, 0xb0, 0xb3, 0xcf, 0xd0, 0x86, 0x47, 0x6d, 0x65, 0x76, 0x3e, 0xef, 0xbd, 0x32, 0xb6, 0xb7, 0x8b, 0x66, 0xe6, 0x46, 0xa1, 0xf8, 0xdd, 0x96, 0x33, 0xaa, 0x91, 0x17, 0x88, 0xcc, 0xbd, 0x27, 0x2b, 0x44, 0x6, 0x92, 0xb9, 0xf7, 0x43, 0x1c, 0x1, 0xeb, 0xc0, 0x96, 0x1a, 0x83, 0x2b, 0xe7, 0x3e, 0x20, 0xe3, 0x10, 0x7f, 0xde, 0x50, 0x1f, 0x75, 0x25, 0x6f, 0xee, 0x5a, 0x22, 0x67, 0xc6, 0xfa, 0x99, 0x6f, 0x27, 0xa9, 0x22, 0xf3, 0x81, 0x16, 0xbf, 0xd3, 0xbc, 0xc4, 0x3c, 0x7, 0x98, 0x90, 0x7, 0xfc, 0x36, 0x4c, 0x45, 0x6a, 0x3a, 0x6d, 0x8f, 0x22, 0x73, 0x36, 0xa6, 0x24, 0x4e, 0xcf, 0xd, 0x6, 0x7d, 0x72, 0xa9, 0x65, 0x76, 0x7, 0x93, 0x4e, 0xe3, 0x14, 0x4e, 0xb1, 0x48, 0xda, 0xdd, 0xcd, 0x5c, 0x9a, 0x1, 0x16, 0x84, 0x20, 0x8e, 0x83, 0x67, 0xf3, 0x94, 0x7c, 0x83, 0x17, 0x5b, 0x2e, 0x4b, 0xb3, 0xb, 0xb5, 0x61, 0x46, 0xe4, 0x16, 0x1e, 0x51, 0xd1, 0x19, 0x47, 0x30, 0x32, 0xb1, 0xc8, 0xf9, 0x6c, 0x58, 0xdd, 0x3d, 0x37, 0xc6, 0x95, 0x85, 0x89, 0xe6, 0xd0, 0xc5, 0xc7, 0x24, 0xce, 0x34, 0xf6, 0x67, 0xa7, 0xc0, 0x9b, 0xf8, 0xa0, 0x4f, 0xf, 0x6, 0xee, 0xdf, 0x15, 0xa7, 0x5a, 0x76, 0x1f, 0xd3, 0x6e, 0x60, 0xf7, 0x7e, 0x9d, 0x4e, 0x29, 0xc, 0x36, 0xd, 0xdf, 0xab, 0xfc, 0xb1, 0x94, 0x9e, 0x79, 0xb1, 0xd5, 0xc5, 0xdb, 0xf5, 0xa7, 0x37, 0xef, 0x64, 0x53, 0x1d, 0xc6, 0x6f, 0x5c, 0x7f, 0x9, 0x5c, 0xce, 0x5, 0xd9, 0xe0, 0xf, 0x4d, 0x55, 0x21, 0xef, 0xc6, 0x93, 0xbf, 0x28, 0x1e, 0x7d, 0x4a, 0x79, 0xe5, 0x43, 0x7b, 0xf5, 0x5, 0xe4, 0x59, 0x23, 0x50, 0x8d, 0x0, 0x76, 0x9f, 0x7b, 0x77, 0xbb, 0x94, 0x30, 0xdc, 0x6, 0xd3, 0x2f, 0xd2, 0xb6, 0x4f, 0x8d, 0xe6, 0x1c, 0xdc, 0x84, 0x96, 0xb2, 0xfb, 0x75, 0x60, 0xc6, 0xa, 0x72, 0x5, 0x7, 0x7d, 0xba, 0x7d, 0xb8, 0xc2, 0xe2, 0x2d, 0x39, 0x8c, 0x91, 0x56, 0xac, 0x7a, 0x6b, 0x42, 0xc5, 0x36, 0x96, 0xf9, 0x8b, 0xba, 0xb8, 0x24, 0x70, 0xe8, 0xed, 0xa1, 0xde, 0x51, 0xf, 0xb9, 0xfd, 0x61, 0xff, 0x77, 0x47, 0xcf, 0xd9, 0xf, 0x6, 0x29, 0x9e, 0x57, 0x51, 0x1, 0x63, 0x3f, 0x44, 0x84, 0xb0, 0x96, 0x5a, 0x2, 0xf7, 0xa0, 0xbd, 0xda, 0x4c, 0x60, 0x7a, 0x49, 0x5f, 0xf9, 0x4d, 0x35, 0x62, 0x17, 0xed, 0x9d, 0xe8, 0xf, 0xf4, 0x89, 0x67, 0xda, 0xe2, 0xb8, 0xf8, 0x2d, 0xe7, 0x6, 0xdf, 0xff, 0xd6, 0x20, 0x2c, 0x6c, 0x21, 0x1a, 0x2f, 0x5a, 0xf, 0xb6, 0xf2, 0xa9, 0x6d, 0x7f, 0x1f, 0xf2, 0xe6, 0xe9, 0xed, 0x33, 0x50, 0xd8, 0x63, 0x57, 0xf5, 0xb7, 0xb1, 0x0, 0x99, 0x45, 0xb4, 0xbe, 0xd3, 0x41, 0x27, 0xf0, 0x5, 0xb, 0xef, 0x6f, 0xa4, 0x8, 0x24, 0x23, 0xff, 0xc1, 0x59, 0x9e, 0xce, 0xa7, 0xe7, 0x88, 0x3f, 0x75, 0xdd, 0x1b, 0x24, 0x59, 0xb4, 0x51, 0xfe, 0xb6, 0xdd, 0xf3, 0xa2, 0x7b, 0x1, 0x79, 0xed, 0x8f, 0x7e, 0x76, 0x1c, 0x7e, 0xf2, 0xe7, 0xf8, 0xf4, 0x68, 0xda, 0xaf, 0xee, 0x14, 0x77, 0xd8, 0xd8, 0x5a, 0x0, 0x0, 0x4d, 0x1, 0x1e, 0xec, 0x4a, 0x36, 0x1b, 0xb, 0x6, 0x87, 0xc3, 0x17, 0xf9, 0x2a, 0xca, 0x42, 0xc6, 0xc1, 0x80, 0xd2, 0x15, 0x5d, 0x49, 0x2b, 0xe0, 0x4f, 0x91, 0xc8, 0xa5, 0x14, 0x35, 0x4, 0x85, 0x1c, 0xe2, 0xaa, 0x42, 0x55, 0x29, 0x9, 0x2d, 0x93, 0xbb, 0xf3, 0xd4, 0x39, 0x1a, 0x95, 0xe, 0xe2, 0x2b, 0x76, 0x3a, 0x84, 0x3f, 0xb6, 0xb9, 0x4f, 0x38, 0x9f, 0xa2, 0x28, 0xa, 0xbc, 0x3a, 0xcb, 0xb3, 0xa9, 0xf9, 0x67, 0xa, 0x4a, 0xae, 0x43, 0x45, 0x1c, 0x1a, 0xa7, 0x7f, 0xa1, 0x11, 0xef, 0xd5, 0x3c, 0x4, 0x76, 0x4c, 0x94, 0xd5, 0xa7, 0xaa, 0x2d, 0x94, 0xe0, 0x7f, 0x1a, 0xb5, 0x47, 0x21, 0xba, 0x76, 0xc4, 0xa7, 0x6a, 0x8, 0x75, 0xa1, 0xf5, 0x63, 0x1e, 0xe0, 0xc9, 0x73, 0x83, 0x2e, 0xa1, 0x9e, 0x67, 0xc7, 0xa4, 0xce, 0x99, 0x17, 0x1a, 0xa, 0xd, 0x1, 0xbc, 0xce, 0x20, 0xb6, 0xbc, 0x76, 0xd7, 0x1d, 0x8a, 0x62, 0xfe, 0x11, 0xe8, 0x81, 0x8d, 0xbe, 0x2d, 0x7c, 0x14, 0xf3, 0x7, 0x6d, 0x6a, 0x7b, 0x5f, 0xb5, 0x3c, 0x3b, 0x56, 0x65, 0x8b, 0x54, 0xb3, 0xb, 0x5d, 0xa0, 0xc2, 0x6f, 0x94, 0xbb, 0xc1, 0x8d, 0x66, 0x73, 0x97, 0x62, 0x2b, 0x50, 0x45, 0x31, 0xb3, 0xe, 0x9d, 0x69, 0x96, 0x2b, 0x65, 0xd7, 0xd5, 0x5, 0x1d, 0xa4, 0x81, 0xd7, 0x30, 0x81, 0xd4, 0xa0, 0x3, 0x2, 0x1, 0x12, 0xa2, 0x81, 0xcc, 0x4, 0x81, 0xc9, 0x5, 0xf7, 0xa9, 0xe9, 0xf3, 0x21, 0xc9, 0x87, 0xb6, 0xba, 0xee, 0xf3, 0xde, 0xfe, 0xa, 0xd, 0xde, 0x51, 0x42, 0x35, 0xaf, 0x34, 0x83, 0x62, 0xb9, 0x6d, 0x7b, 0x10, 0x29, 0x2d, 0xa, 0xbf, 0x65, 0x5d, 0xb0, 0x66, 0xb3, 0x71, 0x8c, 0xf6, 0xec, 0xe5, 0x17, 0x50, 0x55, 0x68, 0xa1, 0xdc, 0x45, 0xbb, 0x35, 0x41, 0xf5, 0x6e, 0x8c, 0x95, 0x4, 0xfe, 0x2f, 0xe6, 0x9a, 0xff, 0x41, 0x3a, 0x6f, 0x8c, 0x57, 0x3e, 0x10, 0x9f, 0xf5, 0x2f, 0x5f, 0x7, 0x8d, 0xb2, 0xf, 0x8b, 0xb6, 0x6b, 0x16, 0x37, 0x99, 0xff, 0x1c, 0xee, 0x84, 0xf2, 0x85, 0xdf, 0xf3, 0x3c, 0x12, 0xe0, 0xb, 0x98, 0x29, 0x6e, 0x22, 0xa5, 0xf1, 0x11, 0x99, 0x5a, 0x65, 0x51, 0x4c, 0x9, 0xdb, 0x98, 0x53, 0x80, 0x9d, 0x79, 0xd8, 0xe2, 0xa, 0x44, 0x8b, 0xf9, 0x66, 0x31, 0x53, 0x7a, 0x7e, 0xbd, 0x38, 0x4d, 0x84, 0xa6, 0x9d, 0x9, 0xaa, 0xe9, 0xce, 0x74, 0x1, 0xd4, 0x70, 0xe0, 0x42, 0xa1, 0x22, 0xb0, 0x80, 0x8, 0xca, 0x16, 0x29, 0x98, 0x3a, 0x9f, 0x78, 0xd7, 0xc3, 0x2e, 0x4, 0xeb, 0x46, 0xe2, 0x7e, 0xc7, 0x47, 0xf4, 0x53, 0x50, 0xc6, 0x6, 0xed, 0x4b, 0xbb, 0x9, 0x9d, 0x6f, 0x61, 0x7b, 0x7a, 0xa7, 0xcb, 0x1d, 0x5d, 0xd5, 0x7a, 0xa6, 0x29, 0xb7, 0x4e, 0xf4, 0xb, 0x6d, 0xc5, 0x65, 0x3b, 0x2a, 0x5c, 0x81, 0x4c, 0x92, 0x13, 0x63, 0x60, 0x0, 0x0 ];

        let message = MessageBase::from_bytes(&x).unwrap();

        //println!("{}", message);

        let z = message.to_bytes(5512);
        assert_eq!(x, z);
    }

    /*
    #[test]
    fn parsing() {
        let mut records = RecordMap::new();

        let mut parser = ZoneReader::open("/home/brad/Downloads/find9.net.test.zone", "find9.net").unwrap();
        for (name, record) in parser.iter() {
            println!("{}: {}", name, record);

            records
                .entry(name)
                .or_insert_with(HashMap::new)
                .entry(record.get_type())
                .or_insert_with(Vec::new)
                .push(record);
        }

        //println!("{:?}", records);
        println!("{:?}", records["@"][&RRTypes::A]);
    }

    #[test]
    fn journal() {
        let mut records = RecordMap::new();

        let mut parser = JournalReader::open("/home/brad/Downloads/db.find9.net.jnl").unwrap();


        for txn in parser.iter() {
            println!("{:?}", txn);
        }
    }
    */
}
