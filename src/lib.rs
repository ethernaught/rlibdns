pub mod messages;
pub mod records;
pub mod utils;

#[cfg(test)]
mod tests {
    use crate::messages::message_base::MessageBase;

    #[test]
    fn encode_and_decode() {
        let x = vec![ 0xa7, 0xa2, 0x81, 0x80, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x06, 0x67, 0x6f, 0x6f,
                      0x67, 0x6c, 0x65, 0x03, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x01, 0x00, 0x01, 0xc0, 0x0c, 0x00, 0x01,
                      0x00, 0x01, 0x00, 0x00, 0x01, 0x23, 0x00, 0x04, 0x8e, 0xfa, 0x45, 0xee, 0x00, 0x00, 0x29, 0x04,
                      0xd0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];

        let message = MessageBase::from_bytes(&x, 0).unwrap();

        assert_eq!(x, message.to_bytes());
    }
}
